- tweets.each do |tweet|
  .tweet.border-bottom.py-3 id="tweet_#{tweet.id}"
    .head-area
      = link_to user_path(tweet.user), class: "text-dark" do
        - if tweet.user.image.attached?
          = image_tag tweet.user.image.variant(resize:'50x50'), class: 'rounded-circle mr-3'
        - else
          = image_tag 'no-image-icon.jpg', size: '50x50', class: 'rounded-circle border mr-3'
        span.font-weight-bold
          = tweet.user.name
    .body-area.mt-3
      = link_to user_tweet_path(tweet.user, tweet), class: 'text-dark' do
        = simple_format(tweet.body)
        - if tweet.images.attached?
          .images.d-flex.flex-wrap.justify-content-center.mb-3
            - tweet.images.each do |image|
              .image
                = image_tag image.variant(resize: '150').processed, class: 'shadow'
    .count-area.mb-2
      span.mr-5
        = render "favorites/favorite-btn", tweet: tweet
      span
        i.far.fa-comment.mr-1
        = tweet.replies.count
    .foot-area.d-flex.align-items-end
      .time
        = tweet.created_at.strftime('%Y/%m/%d　%H:%M:%S')
      - if tweet.user == current_user
        .delete-btn.ml-auto
          = link_to 'つぶやきを削除', user_tweet_path(tweet.user, tweet), method: :delete, class: "btn btn-sm btn-outline-danger px-3 font-weight-bold rounded-pill"
= paginate tweets